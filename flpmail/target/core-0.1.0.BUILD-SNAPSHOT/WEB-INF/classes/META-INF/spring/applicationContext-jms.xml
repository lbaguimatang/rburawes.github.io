<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:amq="http://activemq.apache.org/schema/core" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd                http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd   http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd">
    <!-- Embedded ActiveMQ Broker JMX MBean server enabled by default, access via: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi -->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616" />
			</bean>
		</property>
	</bean>
    <!-- Spring JMS Template -->
    <bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplate">
        <!-- lets wrap in a pool to avoid creating a connection per send -->
        <property name="connectionFactory" ref="jmsFactory"/>
        <property name="defaultDestination" ref="jms.topic.EmployeeUpdateAlerts"/>
    </bean>
    <amq:topic id="jms.topic.EmployeeUpdateAlerts" physicalName="jms.topic.EmployeeUpdateAlerts"/>
    
	<jms:listener-container connection-factory="jmsFactory" destination-type="topic">
        <jms:listener destination="jms.topic.EmployeeUpdateAlerts" method="onMessage" ref="jMSEmployeeUpdateTopicListener"/>
    </jms:listener-container>
    
    <bean class="io.flp.core.messaging.JMSEmployeeUpdateTopicListener" id="jMSEmployeeUpdateTopicListener"/>
</beans>
